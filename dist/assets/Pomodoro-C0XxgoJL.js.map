{"version":3,"file":"Pomodoro-C0XxgoJL.js","sources":["../../node_modules/lucide-react/dist/esm/icons/pause.js","../../node_modules/lucide-react/dist/esm/icons/play.js","../../node_modules/lucide-react/dist/esm/icons/refresh-cw.js","../../node_modules/lucide-react/dist/esm/icons/target.js","../../node_modules/lucide-react/dist/esm/icons/timer.js","../../src/pages/Pomodoro.tsx"],"sourcesContent":["/**\n * @license lucide-react v0.294.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst Pause = createLucideIcon(\"Pause\", [\n  [\"rect\", { width: \"4\", height: \"16\", x: \"6\", y: \"4\", key: \"iffhe4\" }],\n  [\"rect\", { width: \"4\", height: \"16\", x: \"14\", y: \"4\", key: \"sjin7j\" }]\n]);\n\nexport { Pause as default };\n//# sourceMappingURL=pause.js.map\n","/**\n * @license lucide-react v0.294.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst Play = createLucideIcon(\"Play\", [\n  [\"polygon\", { points: \"5 3 19 12 5 21 5 3\", key: \"191637\" }]\n]);\n\nexport { Play as default };\n//# sourceMappingURL=play.js.map\n","/**\n * @license lucide-react v0.294.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst RefreshCw = createLucideIcon(\"RefreshCw\", [\n  [\"path\", { d: \"M3 12a9 9 0 0 1 9-9 9.75 9.75 0 0 1 6.74 2.74L21 8\", key: \"v9h5vc\" }],\n  [\"path\", { d: \"M21 3v5h-5\", key: \"1q7to0\" }],\n  [\"path\", { d: \"M21 12a9 9 0 0 1-9 9 9.75 9.75 0 0 1-6.74-2.74L3 16\", key: \"3uifl3\" }],\n  [\"path\", { d: \"M8 16H3v5\", key: \"1cv678\" }]\n]);\n\nexport { RefreshCw as default };\n//# sourceMappingURL=refresh-cw.js.map\n","/**\n * @license lucide-react v0.294.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst Target = createLucideIcon(\"Target\", [\n  [\"circle\", { cx: \"12\", cy: \"12\", r: \"10\", key: \"1mglay\" }],\n  [\"circle\", { cx: \"12\", cy: \"12\", r: \"6\", key: \"1vlfrh\" }],\n  [\"circle\", { cx: \"12\", cy: \"12\", r: \"2\", key: \"1c9p78\" }]\n]);\n\nexport { Target as default };\n//# sourceMappingURL=target.js.map\n","/**\n * @license lucide-react v0.294.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst Timer = createLucideIcon(\"Timer\", [\n  [\"line\", { x1: \"10\", x2: \"14\", y1: \"2\", y2: \"2\", key: \"14vaq8\" }],\n  [\"line\", { x1: \"12\", x2: \"15\", y1: \"14\", y2: \"11\", key: \"17fdiu\" }],\n  [\"circle\", { cx: \"12\", cy: \"14\", r: \"8\", key: \"1e1u0o\" }]\n]);\n\nexport { Timer as default };\n//# sourceMappingURL=timer.js.map\n","import React, { useState, useEffect, useCallback, useMemo } from 'react'\nimport { Play, Pause, RefreshCw, Clock, Timer, Target } from 'lucide-react'\nimport { useLocalStorage } from '../hooks/useLocalStorage'\nimport { PomodoroSettings } from '@/types'\n\ntype Mode = 'pomodoro' | 'stopwatch' | 'focus'\n\nconst Pomodoro: React.FC = () => {\n  // Default settings with more robust initialization\n  const [settings, setSettings] = useLocalStorage<PomodoroSettings>('pomodoroSettings', {\n    workDuration: 25,\n    breakDuration: 5,\n    longBreakDuration: 15,\n    sessionsBeforeLongBreak: 4\n  })\n\n  // Comprehensive state management\n  const [mode, setMode] = useState<Mode>('pomodoro')\n  const [isRunning, setIsRunning] = useState(false)\n  const [sessionsCompleted, setSessionsCompleted] = useState(0)\n  const [isWorkSession, setIsWorkSession] = useState(true)\n\n  // Time calculation based on current mode and session type\n  const calculateInitialTime = useCallback(() => {\n    switch (mode) {\n      case 'pomodoro':\n        return isWorkSession \n          ? settings.workDuration * 60 \n          : (sessionsCompleted % settings.sessionsBeforeLongBreak === 0 \n            ? settings.longBreakDuration * 60 \n            : settings.breakDuration * 60)\n      case 'stopwatch':\n      case 'focus':\n        return 0\n      default:\n        return settings.workDuration * 60\n    }\n  }, [mode, isWorkSession, sessionsCompleted, settings])\n\n  const [timeLeft, setTimeLeft] = useState(calculateInitialTime())\n\n  // Memoized timer modes for consistent rendering\n  const timerModes = useMemo(() => [\n    { name: 'pomodoro', icon: Clock },\n    { name: 'stopwatch', icon: Timer },\n    { name: 'focus', icon: Target }\n  ], [])\n\n  // Comprehensive timer management effect\n  useEffect(() => {\n    let interval: ReturnType<typeof setInterval> | null = null\n    \n    const handleTimerTick = () => {\n      if (isRunning) {\n        setTimeLeft(prevTime => {\n          if (prevTime <= 0) {\n            // Session complete logic for Pomodoro mode\n            if (mode === 'pomodoro') {\n              const newSessionsCompleted = sessionsCompleted + 1\n              const nextIsWorkSession = !isWorkSession\n\n              // Determine next session duration\n              const newDuration = nextIsWorkSession \n                ? settings.workDuration * 60 \n                : (newSessionsCompleted % settings.sessionsBeforeLongBreak === 0 \n                  ? settings.longBreakDuration * 60 \n                  : settings.breakDuration * 60)\n\n              setSessionsCompleted(newSessionsCompleted)\n              setIsWorkSession(nextIsWorkSession)\n              setIsRunning(false)\n              return newDuration\n            }\n            \n            // For stopwatch and focus modes, reset or stop\n            setIsRunning(false)\n            return 0\n          }\n          return prevTime - 1\n        })\n      }\n    }\n\n    if (isRunning) {\n      interval = setInterval(handleTimerTick, 1000)\n    }\n\n    return () => {\n      if (interval) clearInterval(interval)\n    }\n  }, [isRunning, mode, sessionsCompleted, isWorkSession, settings])\n\n  // Reset timer for current mode\n  const resetTimer = useCallback(() => {\n    const initialTime = calculateInitialTime()\n    setTimeLeft(initialTime)\n    setIsRunning(false)\n    \n    if (mode === 'pomodoro') {\n      setIsWorkSession(true)\n      setSessionsCompleted(0)\n    }\n  }, [mode, calculateInitialTime])\n\n  // Mode change handler\n  const handleModeChange = useCallback((newMode: Mode) => {\n    setMode(newMode)\n    \n    // Reset state when changing modes\n    setIsRunning(false)\n    setSessionsCompleted(0)\n    setIsWorkSession(true)\n    \n    // Calculate and set initial time for new mode\n    const initialTime = mode === 'pomodoro' \n      ? settings.workDuration * 60 \n      : 0\n    \n    setTimeLeft(initialTime)\n  }, [mode, settings])\n\n  // Toggle timer for current mode\n  const toggleTimer = useCallback(() => {\n    setIsRunning(prev => !prev)\n  }, [])\n\n  // Utility function to format time\n  const formatTime = (seconds: number) => {\n    const hours = Math.floor(seconds / 3600)\n    const minutes = Math.floor((seconds % 3600) / 60)\n    const remainingSeconds = seconds % 60\n    return `${hours > 0 ? `${hours.toString().padStart(2, '0')}:` : ''}${minutes.toString().padStart(2, '0')}:${remainingSeconds.toString().padStart(2, '0')}`\n  }\n\n  // Render timer content based on current mode\n  const renderModeContent = () => {\n    switch (mode) {\n      case 'pomodoro':\n        return (\n          <>\n            <div className=\"text-6xl font-bold mb-6 text-focus-accent\">\n              {formatTime(timeLeft)}\n            </div>\n            <div className=\"text-lg mb-4 text-gray-600 dark:text-gray-300\">\n              {isWorkSession ? 'Work Session' : 'Break Time'}\n            </div>\n          </>\n        )\n      case 'stopwatch':\n        return (\n          <>\n            <div className=\"text-6xl font-bold mb-6 text-focus-accent\">\n              {formatTime(timeLeft)}\n            </div>\n            <div className=\"text-lg mb-4 text-gray-600 dark:text-gray-300\">\n              Stopwatch\n            </div>\n          </>\n        )\n      case 'focus':\n        return (\n          <>\n            <div className=\"text-6xl font-bold mb-6 text-focus-accent\">\n              {formatTime(timeLeft)}\n            </div>\n            <div className=\"text-lg mb-4 text-gray-600 dark:text-gray-300\">\n              Focus Mode\n            </div>\n          </>\n        )\n      default:\n        return null\n    }\n  }\n\n  return (\n    <div className=\"container mx-auto px-4 py-8 dark:bg-gray-900 min-h-screen flex flex-col items-center justify-center\">\n      <h1 className=\"text-3xl font-bold mb-6 text-focus-primary dark:text-white\">\n        Productivity Tracker\n      </h1>\n      \n      {/* Sub Navigation */}\n      <div className=\"flex space-x-4 mb-6\">\n        {timerModes.map(({ name, icon: Icon }) => (\n          <button\n            key={name}\n            onClick={() => handleModeChange(name as Mode)}\n            className={`px-4 py-2 rounded-full flex items-center ${\n              mode === name \n                ? 'bg-focus-accent text-white' \n                : 'bg-gray-200 dark:bg-gray-700 text-gray-700 dark:text-gray-300'\n            }`}\n          >\n            <Icon size={20} className=\"mr-2\" />\n            {name.charAt(0).toUpperCase() + name.slice(1)}\n          </button>\n        ))}\n      </div>\n      \n      <div className=\"bg-white dark:bg-gray-800 p-8 rounded-lg shadow-lg text-center\">\n        {renderModeContent()}\n        \n        <div className=\"flex justify-center space-x-4\">\n          <button \n            onClick={toggleTimer} \n            className=\"bg-focus-accent text-white p-3 rounded-full hover:bg-opacity-90\"\n          >\n            {isRunning ? <Pause size={24} /> : <Play size={24} />}\n          </button>\n          \n          <button \n            onClick={resetTimer} \n            className=\"bg-gray-200 dark:bg-gray-700 text-gray-700 dark:text-gray-300 p-3 rounded-full hover:bg-opacity-90\"\n          >\n            <RefreshCw size={24} />\n          </button>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Pomodoro"],"names":["Pause","createLucideIcon","Play","RefreshCw","Target","Timer","Pomodoro","settings","setSettings","useLocalStorage","mode","setMode","useState","isRunning","setIsRunning","sessionsCompleted","setSessionsCompleted","isWorkSession","setIsWorkSession","calculateInitialTime","useCallback","timeLeft","setTimeLeft","timerModes","useMemo","Clock","useEffect","interval","prevTime","newSessionsCompleted","nextIsWorkSession","newDuration","resetTimer","initialTime","handleModeChange","newMode","toggleTimer","prev","formatTime","seconds","hours","minutes","remainingSeconds","renderModeContent","jsxs","Fragment","jsx","name","Icon"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4]}