{"version":3,"file":"useLocalStorage-ZCgbiFyn.js","sources":["../../src/hooks/useLocalStorage.ts"],"sourcesContent":["import { useState, useEffect } from 'react'\n\nexport function useLocalStorage<T>(key: string, initialValue: T) {\n  const [storedValue, setStoredValue] = useState<T>(() => {\n    try {\n      const item = window.localStorage.getItem(key)\n      return item ? JSON.parse(item) : initialValue\n    } catch (error) {\n      console.log(error)\n      return initialValue\n    }\n  })\n\n  const setValue = (value: T | ((val: T) => T)) => {\n    try {\n      const valueToStore = value instanceof Function ? value(storedValue) : value\n      setStoredValue(valueToStore)\n      window.localStorage.setItem(key, JSON.stringify(valueToStore))\n    } catch (error) {\n      console.log(error)\n    }\n  }\n\n  return [storedValue, setValue] as const\n}"],"names":["useLocalStorage","key","initialValue","storedValue","setStoredValue","useState","item","error","value","valueToStore"],"mappings":"wCAEO,SAASA,EAAmBC,EAAaC,EAAiB,CAC/D,KAAM,CAACC,EAAaC,CAAc,EAAIC,EAAAA,SAAY,IAAM,CACtD,GAAI,CACF,MAAMC,EAAO,OAAO,aAAa,QAAQL,CAAG,EAC5C,OAAOK,EAAO,KAAK,MAAMA,CAAI,EAAIJ,CAAA,OAC1BK,EAAO,CACd,eAAQ,IAAIA,CAAK,EACVL,CAAA,CACT,CACD,EAYD,MAAO,CAACC,EAVUK,GAA+B,CAC/C,GAAI,CACF,MAAMC,EAAeD,aAAiB,SAAWA,EAAML,CAAW,EAAIK,EACtEJ,EAAeK,CAAY,EAC3B,OAAO,aAAa,QAAQR,EAAK,KAAK,UAAUQ,CAAY,CAAC,CAAA,OACtDF,EAAO,CACd,QAAQ,IAAIA,CAAK,CAAA,CACnB,CAG2B,CAC/B"}